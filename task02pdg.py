# -*- coding: utf-8 -*-
"""TASK02PDG.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gOBfD-lddTP1Emanjqc0r8lUex7dT58j

#**Project Name**: Grouping customers based on their purchases using K-means Algorithm

#**TASK 02**

**Description:** Create a K-means clustering algorithm to group customers of a retail store based on their purchase history.
"""

from google.colab import drive
drive.mount('/content/drive')

import numpy as np
import pandas as pd

"""# **Data Importing**"""

df = pd.read_csv('/content/drive/MyDrive/PP/TASK02PDG/Mall_Customers.csv')
print(df.shape)
print(df.head())

"""# **Data Preprocessing**

**Mapping Gender values to 0 & 1**
"""

class_mapping= {'Male':0,'Female':1}
df['Gender_Bin']=df['Gender'].map(class_mapping)
print(df)

df.head()

df.drop(['Gender'],axis=1,inplace=True)
df.head()

df.drop(['CustomerID'],axis=1,inplace=True)
df.head()

"""**Checking for Null values if any**"""

# Check for missing values
missing_values = df.isna().sum()
print(missing_values)

"""**Visualizing based on different features**"""

import matplotlib.pyplot as plt
plt.scatter(df['Annual Income (k$)'],df['Spending Score (1-100)'])

import matplotlib.pyplot as plt
plt.scatter(df['Annual Income (k$)'],df['Gender_Bin'])

import matplotlib.pyplot as plt
plt.scatter(df['Annual Income (k$)'],df['Age'])

"""# **Checking for how many clusters will be there**"""

#checking number of clusters
from sklearn.cluster import KMeans
wcss=[]

for i in range(1,11):
  kmeans=KMeans(n_clusters=i)
  kmeans.fit_predict(df)
  kmeans.inertia_
  wcss.append(kmeans.inertia_)

wcss

"""**Graph showing total clusters at L-Bow point (i.e. 4)**"""

plt.plot(range(1,11),wcss)

X=df.iloc[:,:].values
kmeans=KMeans(n_clusters=4)
y_means=kmeans.fit_predict(X)
y_means

X[y_means == 0] #Showing Datapoints which comes under cluster number 0

X[y_means == 0,0] #X[y_means == A,B] --> A is Cluster number, B is particular column of data under Cluster A

"""# **Clusters done accordingly**"""

plt.scatter(X[y_means == 0,1],X[y_means == 0,2],color='yellow') #Taking Annual Income and Spending score
plt.scatter(X[y_means == 1,1],X[y_means == 1,2],color='red')
plt.scatter(X[y_means == 2,1],X[y_means == 2,2],color='blue')
plt.scatter(X[y_means == 3,1],X[y_means == 3,2],color='green')

from mpl_toolkits.mplot3d import Axes3D

# Create a 3D plot
fig = plt.figure(figsize=(10, 7))
ax = fig.add_subplot(111, projection='3d')

# Plot the data points for each cluster
ax.scatter(X[y_means == 0, 1], X[y_means == 0, 2], X[y_means == 0, 3], color='yellow')
ax.scatter(X[y_means == 1, 1], X[y_means == 1, 2], X[y_means == 1, 3], color='red')
ax.scatter(X[y_means == 2, 1], X[y_means == 2, 2], X[y_means == 2, 3], color='blue')
ax.scatter(X[y_means == 3, 1], X[y_means == 3, 2], X[y_means == 3, 3], color='green')

# Set the labels for the axes
ax.set_xlabel('Annual Income (k$)')
ax.set_ylabel('Spending Score (1-100)')
ax.set_zlabel('Gender')

# Show the plot
plt.show()